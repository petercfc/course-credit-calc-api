"use strict";
// Code generated by Prisma (prisma@1.28.3). DO NOT EDIT.
// Please don't change this file manually but run `prisma generate` to update it.
// For more information, please read the docs: https://www.prisma.io/docs/prisma-client/
exports.__esModule = true;
exports.typeDefs = "type AggregateCourse {\n  count: Int!\n}\n\ntype AggregateDegree {\n  count: Int!\n}\n\ntype AggregateDepartment {\n  count: Int!\n}\n\ntype AggregateStudent {\n  count: Int!\n}\n\ntype AggregateSubject {\n  count: Int!\n}\n\ntype BatchPayload {\n  count: Long!\n}\n\ntype Course {\n  id: ID!\n  name: String!\n  number: String!\n  level: Int!\n  credits: Int!\n  subject: Subject\n  degree: Degree\n  department: Department\n  prerequisite: Course\n}\n\ntype CourseConnection {\n  pageInfo: PageInfo!\n  edges: [CourseEdge]!\n  aggregate: AggregateCourse!\n}\n\ninput CourseCreateInput {\n  name: String!\n  number: String!\n  level: Int!\n  credits: Int!\n  subject: SubjectCreateOneInput\n  degree: DegreeCreateOneInput\n  department: DepartmentCreateOneInput\n  prerequisite: CourseCreateOneInput\n}\n\ninput CourseCreateManyInput {\n  create: [CourseCreateInput!]\n  connect: [CourseWhereUniqueInput!]\n}\n\ninput CourseCreateOneInput {\n  create: CourseCreateInput\n  connect: CourseWhereUniqueInput\n}\n\ntype CourseEdge {\n  node: Course!\n  cursor: String!\n}\n\nenum CourseOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  number_ASC\n  number_DESC\n  level_ASC\n  level_DESC\n  credits_ASC\n  credits_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype CoursePreviousValues {\n  id: ID!\n  name: String!\n  number: String!\n  level: Int!\n  credits: Int!\n}\n\ninput CourseScalarWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  number: String\n  number_not: String\n  number_in: [String!]\n  number_not_in: [String!]\n  number_lt: String\n  number_lte: String\n  number_gt: String\n  number_gte: String\n  number_contains: String\n  number_not_contains: String\n  number_starts_with: String\n  number_not_starts_with: String\n  number_ends_with: String\n  number_not_ends_with: String\n  level: Int\n  level_not: Int\n  level_in: [Int!]\n  level_not_in: [Int!]\n  level_lt: Int\n  level_lte: Int\n  level_gt: Int\n  level_gte: Int\n  credits: Int\n  credits_not: Int\n  credits_in: [Int!]\n  credits_not_in: [Int!]\n  credits_lt: Int\n  credits_lte: Int\n  credits_gt: Int\n  credits_gte: Int\n  AND: [CourseScalarWhereInput!]\n  OR: [CourseScalarWhereInput!]\n  NOT: [CourseScalarWhereInput!]\n}\n\ntype CourseSubscriptionPayload {\n  mutation: MutationType!\n  node: Course\n  updatedFields: [String!]\n  previousValues: CoursePreviousValues\n}\n\ninput CourseSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: CourseWhereInput\n  AND: [CourseSubscriptionWhereInput!]\n  OR: [CourseSubscriptionWhereInput!]\n  NOT: [CourseSubscriptionWhereInput!]\n}\n\ninput CourseUpdateDataInput {\n  name: String\n  number: String\n  level: Int\n  credits: Int\n  subject: SubjectUpdateOneInput\n  degree: DegreeUpdateOneInput\n  department: DepartmentUpdateOneInput\n  prerequisite: CourseUpdateOneInput\n}\n\ninput CourseUpdateInput {\n  name: String\n  number: String\n  level: Int\n  credits: Int\n  subject: SubjectUpdateOneInput\n  degree: DegreeUpdateOneInput\n  department: DepartmentUpdateOneInput\n  prerequisite: CourseUpdateOneInput\n}\n\ninput CourseUpdateManyDataInput {\n  name: String\n  number: String\n  level: Int\n  credits: Int\n}\n\ninput CourseUpdateManyInput {\n  create: [CourseCreateInput!]\n  update: [CourseUpdateWithWhereUniqueNestedInput!]\n  upsert: [CourseUpsertWithWhereUniqueNestedInput!]\n  delete: [CourseWhereUniqueInput!]\n  connect: [CourseWhereUniqueInput!]\n  set: [CourseWhereUniqueInput!]\n  disconnect: [CourseWhereUniqueInput!]\n  deleteMany: [CourseScalarWhereInput!]\n  updateMany: [CourseUpdateManyWithWhereNestedInput!]\n}\n\ninput CourseUpdateManyMutationInput {\n  name: String\n  number: String\n  level: Int\n  credits: Int\n}\n\ninput CourseUpdateManyWithWhereNestedInput {\n  where: CourseScalarWhereInput!\n  data: CourseUpdateManyDataInput!\n}\n\ninput CourseUpdateOneInput {\n  create: CourseCreateInput\n  update: CourseUpdateDataInput\n  upsert: CourseUpsertNestedInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: CourseWhereUniqueInput\n}\n\ninput CourseUpdateWithWhereUniqueNestedInput {\n  where: CourseWhereUniqueInput!\n  data: CourseUpdateDataInput!\n}\n\ninput CourseUpsertNestedInput {\n  update: CourseUpdateDataInput!\n  create: CourseCreateInput!\n}\n\ninput CourseUpsertWithWhereUniqueNestedInput {\n  where: CourseWhereUniqueInput!\n  update: CourseUpdateDataInput!\n  create: CourseCreateInput!\n}\n\ninput CourseWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  number: String\n  number_not: String\n  number_in: [String!]\n  number_not_in: [String!]\n  number_lt: String\n  number_lte: String\n  number_gt: String\n  number_gte: String\n  number_contains: String\n  number_not_contains: String\n  number_starts_with: String\n  number_not_starts_with: String\n  number_ends_with: String\n  number_not_ends_with: String\n  level: Int\n  level_not: Int\n  level_in: [Int!]\n  level_not_in: [Int!]\n  level_lt: Int\n  level_lte: Int\n  level_gt: Int\n  level_gte: Int\n  credits: Int\n  credits_not: Int\n  credits_in: [Int!]\n  credits_not_in: [Int!]\n  credits_lt: Int\n  credits_lte: Int\n  credits_gt: Int\n  credits_gte: Int\n  subject: SubjectWhereInput\n  degree: DegreeWhereInput\n  department: DepartmentWhereInput\n  prerequisite: CourseWhereInput\n  AND: [CourseWhereInput!]\n  OR: [CourseWhereInput!]\n  NOT: [CourseWhereInput!]\n}\n\ninput CourseWhereUniqueInput {\n  id: ID\n}\n\ntype Degree {\n  id: ID!\n  name: String!\n  requiredCredits: Int!\n}\n\ntype DegreeConnection {\n  pageInfo: PageInfo!\n  edges: [DegreeEdge]!\n  aggregate: AggregateDegree!\n}\n\ninput DegreeCreateInput {\n  name: String!\n  requiredCredits: Int!\n}\n\ninput DegreeCreateOneInput {\n  create: DegreeCreateInput\n  connect: DegreeWhereUniqueInput\n}\n\ntype DegreeEdge {\n  node: Degree!\n  cursor: String!\n}\n\nenum DegreeOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  requiredCredits_ASC\n  requiredCredits_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype DegreePreviousValues {\n  id: ID!\n  name: String!\n  requiredCredits: Int!\n}\n\ntype DegreeSubscriptionPayload {\n  mutation: MutationType!\n  node: Degree\n  updatedFields: [String!]\n  previousValues: DegreePreviousValues\n}\n\ninput DegreeSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: DegreeWhereInput\n  AND: [DegreeSubscriptionWhereInput!]\n  OR: [DegreeSubscriptionWhereInput!]\n  NOT: [DegreeSubscriptionWhereInput!]\n}\n\ninput DegreeUpdateDataInput {\n  name: String\n  requiredCredits: Int\n}\n\ninput DegreeUpdateInput {\n  name: String\n  requiredCredits: Int\n}\n\ninput DegreeUpdateManyMutationInput {\n  name: String\n  requiredCredits: Int\n}\n\ninput DegreeUpdateOneInput {\n  create: DegreeCreateInput\n  update: DegreeUpdateDataInput\n  upsert: DegreeUpsertNestedInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: DegreeWhereUniqueInput\n}\n\ninput DegreeUpsertNestedInput {\n  update: DegreeUpdateDataInput!\n  create: DegreeCreateInput!\n}\n\ninput DegreeWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  requiredCredits: Int\n  requiredCredits_not: Int\n  requiredCredits_in: [Int!]\n  requiredCredits_not_in: [Int!]\n  requiredCredits_lt: Int\n  requiredCredits_lte: Int\n  requiredCredits_gt: Int\n  requiredCredits_gte: Int\n  AND: [DegreeWhereInput!]\n  OR: [DegreeWhereInput!]\n  NOT: [DegreeWhereInput!]\n}\n\ninput DegreeWhereUniqueInput {\n  id: ID\n}\n\ntype Department {\n  id: ID!\n  name: String!\n}\n\ntype DepartmentConnection {\n  pageInfo: PageInfo!\n  edges: [DepartmentEdge]!\n  aggregate: AggregateDepartment!\n}\n\ninput DepartmentCreateInput {\n  name: String!\n}\n\ninput DepartmentCreateOneInput {\n  create: DepartmentCreateInput\n  connect: DepartmentWhereUniqueInput\n}\n\ntype DepartmentEdge {\n  node: Department!\n  cursor: String!\n}\n\nenum DepartmentOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype DepartmentPreviousValues {\n  id: ID!\n  name: String!\n}\n\ntype DepartmentSubscriptionPayload {\n  mutation: MutationType!\n  node: Department\n  updatedFields: [String!]\n  previousValues: DepartmentPreviousValues\n}\n\ninput DepartmentSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: DepartmentWhereInput\n  AND: [DepartmentSubscriptionWhereInput!]\n  OR: [DepartmentSubscriptionWhereInput!]\n  NOT: [DepartmentSubscriptionWhereInput!]\n}\n\ninput DepartmentUpdateDataInput {\n  name: String\n}\n\ninput DepartmentUpdateInput {\n  name: String\n}\n\ninput DepartmentUpdateManyMutationInput {\n  name: String\n}\n\ninput DepartmentUpdateOneInput {\n  create: DepartmentCreateInput\n  update: DepartmentUpdateDataInput\n  upsert: DepartmentUpsertNestedInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: DepartmentWhereUniqueInput\n}\n\ninput DepartmentUpsertNestedInput {\n  update: DepartmentUpdateDataInput!\n  create: DepartmentCreateInput!\n}\n\ninput DepartmentWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  AND: [DepartmentWhereInput!]\n  OR: [DepartmentWhereInput!]\n  NOT: [DepartmentWhereInput!]\n}\n\ninput DepartmentWhereUniqueInput {\n  id: ID\n}\n\nscalar Long\n\ntype Mutation {\n  createCourse(data: CourseCreateInput!): Course!\n  updateCourse(data: CourseUpdateInput!, where: CourseWhereUniqueInput!): Course\n  updateManyCourses(data: CourseUpdateManyMutationInput!, where: CourseWhereInput): BatchPayload!\n  upsertCourse(where: CourseWhereUniqueInput!, create: CourseCreateInput!, update: CourseUpdateInput!): Course!\n  deleteCourse(where: CourseWhereUniqueInput!): Course\n  deleteManyCourses(where: CourseWhereInput): BatchPayload!\n  createDegree(data: DegreeCreateInput!): Degree!\n  updateDegree(data: DegreeUpdateInput!, where: DegreeWhereUniqueInput!): Degree\n  updateManyDegrees(data: DegreeUpdateManyMutationInput!, where: DegreeWhereInput): BatchPayload!\n  upsertDegree(where: DegreeWhereUniqueInput!, create: DegreeCreateInput!, update: DegreeUpdateInput!): Degree!\n  deleteDegree(where: DegreeWhereUniqueInput!): Degree\n  deleteManyDegrees(where: DegreeWhereInput): BatchPayload!\n  createDepartment(data: DepartmentCreateInput!): Department!\n  updateDepartment(data: DepartmentUpdateInput!, where: DepartmentWhereUniqueInput!): Department\n  updateManyDepartments(data: DepartmentUpdateManyMutationInput!, where: DepartmentWhereInput): BatchPayload!\n  upsertDepartment(where: DepartmentWhereUniqueInput!, create: DepartmentCreateInput!, update: DepartmentUpdateInput!): Department!\n  deleteDepartment(where: DepartmentWhereUniqueInput!): Department\n  deleteManyDepartments(where: DepartmentWhereInput): BatchPayload!\n  createStudent(data: StudentCreateInput!): Student!\n  updateStudent(data: StudentUpdateInput!, where: StudentWhereUniqueInput!): Student\n  updateManyStudents(data: StudentUpdateManyMutationInput!, where: StudentWhereInput): BatchPayload!\n  upsertStudent(where: StudentWhereUniqueInput!, create: StudentCreateInput!, update: StudentUpdateInput!): Student!\n  deleteStudent(where: StudentWhereUniqueInput!): Student\n  deleteManyStudents(where: StudentWhereInput): BatchPayload!\n  createSubject(data: SubjectCreateInput!): Subject!\n  updateSubject(data: SubjectUpdateInput!, where: SubjectWhereUniqueInput!): Subject\n  updateManySubjects(data: SubjectUpdateManyMutationInput!, where: SubjectWhereInput): BatchPayload!\n  upsertSubject(where: SubjectWhereUniqueInput!, create: SubjectCreateInput!, update: SubjectUpdateInput!): Subject!\n  deleteSubject(where: SubjectWhereUniqueInput!): Subject\n  deleteManySubjects(where: SubjectWhereInput): BatchPayload!\n}\n\nenum MutationType {\n  CREATED\n  UPDATED\n  DELETED\n}\n\ninterface Node {\n  id: ID!\n}\n\ntype PageInfo {\n  hasNextPage: Boolean!\n  hasPreviousPage: Boolean!\n  startCursor: String\n  endCursor: String\n}\n\ntype Query {\n  course(where: CourseWhereUniqueInput!): Course\n  courses(where: CourseWhereInput, orderBy: CourseOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Course]!\n  coursesConnection(where: CourseWhereInput, orderBy: CourseOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): CourseConnection!\n  degree(where: DegreeWhereUniqueInput!): Degree\n  degrees(where: DegreeWhereInput, orderBy: DegreeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Degree]!\n  degreesConnection(where: DegreeWhereInput, orderBy: DegreeOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): DegreeConnection!\n  department(where: DepartmentWhereUniqueInput!): Department\n  departments(where: DepartmentWhereInput, orderBy: DepartmentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Department]!\n  departmentsConnection(where: DepartmentWhereInput, orderBy: DepartmentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): DepartmentConnection!\n  student(where: StudentWhereUniqueInput!): Student\n  students(where: StudentWhereInput, orderBy: StudentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Student]!\n  studentsConnection(where: StudentWhereInput, orderBy: StudentOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): StudentConnection!\n  subject(where: SubjectWhereUniqueInput!): Subject\n  subjects(where: SubjectWhereInput, orderBy: SubjectOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Subject]!\n  subjectsConnection(where: SubjectWhereInput, orderBy: SubjectOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): SubjectConnection!\n  node(id: ID!): Node\n}\n\ntype Student {\n  id: ID!\n  name: String\n  coursesPassed(where: CourseWhereInput, orderBy: CourseOrderByInput, skip: Int, after: String, before: String, first: Int, last: Int): [Course!]\n  enrolledDegree: Degree\n}\n\ntype StudentConnection {\n  pageInfo: PageInfo!\n  edges: [StudentEdge]!\n  aggregate: AggregateStudent!\n}\n\ninput StudentCreateInput {\n  name: String\n  coursesPassed: CourseCreateManyInput\n  enrolledDegree: DegreeCreateOneInput\n}\n\ntype StudentEdge {\n  node: Student!\n  cursor: String!\n}\n\nenum StudentOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype StudentPreviousValues {\n  id: ID!\n  name: String\n}\n\ntype StudentSubscriptionPayload {\n  mutation: MutationType!\n  node: Student\n  updatedFields: [String!]\n  previousValues: StudentPreviousValues\n}\n\ninput StudentSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: StudentWhereInput\n  AND: [StudentSubscriptionWhereInput!]\n  OR: [StudentSubscriptionWhereInput!]\n  NOT: [StudentSubscriptionWhereInput!]\n}\n\ninput StudentUpdateInput {\n  name: String\n  coursesPassed: CourseUpdateManyInput\n  enrolledDegree: DegreeUpdateOneInput\n}\n\ninput StudentUpdateManyMutationInput {\n  name: String\n}\n\ninput StudentWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  coursesPassed_every: CourseWhereInput\n  coursesPassed_some: CourseWhereInput\n  coursesPassed_none: CourseWhereInput\n  enrolledDegree: DegreeWhereInput\n  AND: [StudentWhereInput!]\n  OR: [StudentWhereInput!]\n  NOT: [StudentWhereInput!]\n}\n\ninput StudentWhereUniqueInput {\n  id: ID\n}\n\ntype Subject {\n  id: ID!\n  name: String!\n}\n\ntype SubjectConnection {\n  pageInfo: PageInfo!\n  edges: [SubjectEdge]!\n  aggregate: AggregateSubject!\n}\n\ninput SubjectCreateInput {\n  name: String!\n}\n\ninput SubjectCreateOneInput {\n  create: SubjectCreateInput\n  connect: SubjectWhereUniqueInput\n}\n\ntype SubjectEdge {\n  node: Subject!\n  cursor: String!\n}\n\nenum SubjectOrderByInput {\n  id_ASC\n  id_DESC\n  name_ASC\n  name_DESC\n  createdAt_ASC\n  createdAt_DESC\n  updatedAt_ASC\n  updatedAt_DESC\n}\n\ntype SubjectPreviousValues {\n  id: ID!\n  name: String!\n}\n\ntype SubjectSubscriptionPayload {\n  mutation: MutationType!\n  node: Subject\n  updatedFields: [String!]\n  previousValues: SubjectPreviousValues\n}\n\ninput SubjectSubscriptionWhereInput {\n  mutation_in: [MutationType!]\n  updatedFields_contains: String\n  updatedFields_contains_every: [String!]\n  updatedFields_contains_some: [String!]\n  node: SubjectWhereInput\n  AND: [SubjectSubscriptionWhereInput!]\n  OR: [SubjectSubscriptionWhereInput!]\n  NOT: [SubjectSubscriptionWhereInput!]\n}\n\ninput SubjectUpdateDataInput {\n  name: String\n}\n\ninput SubjectUpdateInput {\n  name: String\n}\n\ninput SubjectUpdateManyMutationInput {\n  name: String\n}\n\ninput SubjectUpdateOneInput {\n  create: SubjectCreateInput\n  update: SubjectUpdateDataInput\n  upsert: SubjectUpsertNestedInput\n  delete: Boolean\n  disconnect: Boolean\n  connect: SubjectWhereUniqueInput\n}\n\ninput SubjectUpsertNestedInput {\n  update: SubjectUpdateDataInput!\n  create: SubjectCreateInput!\n}\n\ninput SubjectWhereInput {\n  id: ID\n  id_not: ID\n  id_in: [ID!]\n  id_not_in: [ID!]\n  id_lt: ID\n  id_lte: ID\n  id_gt: ID\n  id_gte: ID\n  id_contains: ID\n  id_not_contains: ID\n  id_starts_with: ID\n  id_not_starts_with: ID\n  id_ends_with: ID\n  id_not_ends_with: ID\n  name: String\n  name_not: String\n  name_in: [String!]\n  name_not_in: [String!]\n  name_lt: String\n  name_lte: String\n  name_gt: String\n  name_gte: String\n  name_contains: String\n  name_not_contains: String\n  name_starts_with: String\n  name_not_starts_with: String\n  name_ends_with: String\n  name_not_ends_with: String\n  AND: [SubjectWhereInput!]\n  OR: [SubjectWhereInput!]\n  NOT: [SubjectWhereInput!]\n}\n\ninput SubjectWhereUniqueInput {\n  id: ID\n}\n\ntype Subscription {\n  course(where: CourseSubscriptionWhereInput): CourseSubscriptionPayload\n  degree(where: DegreeSubscriptionWhereInput): DegreeSubscriptionPayload\n  department(where: DepartmentSubscriptionWhereInput): DepartmentSubscriptionPayload\n  student(where: StudentSubscriptionWhereInput): StudentSubscriptionPayload\n  subject(where: SubjectSubscriptionWhereInput): SubjectSubscriptionPayload\n}\n";
//# sourceMappingURL=prisma-schema.js.map